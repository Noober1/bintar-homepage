@font-face {
	font-family: 'InterNormal';
	font-style: normal;
	src: url('./assets/fonts/inter/Inter-Regular-slnt=0.ttf'); /* IE9 Compat Modes */
	src: local('Inter'), local('Inter'),url('./assets/fonts/inter/Inter-Regular-slnt=0.ttf') format('truetype')
}

@font-face {
	font-family: 'Inter';
	font-style: bold;
	src: url('./assets/fonts/inter/Inter-ExtraBold-slnt=0.ttf'); /* IE9 Compat Modes */
	src: local('InterBold'), local('InterBold'),url('./assets/fonts/inter/Inter-ExtraBold-slnt=0.ttf') format('truetype')
}

@font-face {
	font-family: 'Visby';
	font-style: normal;
	src: url('./assets/fonts/visbycf/VisbyCF-Bold.woff2'); /* IE9 Compat Modes */
	src: local('Visby'), local('Visby'),url('./assets/fonts/visbycf/VisbyCF-Bold.woff2') format('woff2')
}

@font-face {
	font-family: 'VisbyBold';
	font-style: bold;
	src: url('./assets/fonts/visbycf/VisbyCF-ExtraBold.woff2'); /* IE9 Compat Modes */
	src: local('VisbyBold'), local('VisbyBold'),url('./assets/fonts/visbycf/VisbyCF-ExtraBold.woff2') format('woff2')
}

.transition300 {
	transition: all .3s ease-in-out;
}

#root {
	font-family: 'Inter';
}

// How many menu items do we have?f
$menu-items: 5;

// Colours
$background-color: #121212;
$indicator-color: #5587fe;

// Transition Speed
$transition-speed: .5s;

// Dynamic Variables
$width: (100/$menu-items) * 1%; // makes each item the right size
$menu-items-loop-offset: $menu-items - 1; // the number of items in the menu


// ======================================================
// Step 1 - Making a Fixed Width Navigation
// ======================================================

.PrimaryNav {
	@extend %cf; // clear the floats
	list-style: none;
	margin: 0 auto;
	padding: 0;
	width: 100%;
}

.Nav-item {
	display: block;
	float: left;
	margin: 0;
	padding: 0;
	width: $width; //dynamic width
	text-align: center;

	a {
		display: block;
		padding-top: 16px;
		padding-bottom: 16px;
		text-decoration: none;
	}
}


// ======================================================
// Step 2 - Making the pseudo indicator
// ======================================================

.with-indicator, .with-indicator-scrolled {
	position: relative;
	z-index: 0;

	.Nav-item {
		&:last-child {
			&:before, &:after {
				border-radius:0px 0px 5px 5px;
				content: '';
				display: block;
				position: absolute;
				pointer-events: none;
				transition: left #{$transition-speed} ease;
			}
		}
	}

	@for $i from 1 through $menu-items-loop-offset {
		// when the Nav item "is active", make the indicator line up with the navigation item.
		.Nav-item:nth-child(#{$i}).is-active ~ .Nav-item:last-child:after {
			left:($width*$i)-$width;
		}
		.Nav-item:nth-child(#{$i}).is-active ~ .Nav-item:last-child:before
		{
			left:($width*$i)+($width/2)-$width; // this ensures the triangle lines up to the menu.
		}
	}

// ======================================================
// Step 3 - Making it move
// ======================================================

		// This could be in the same loop as the above but for the tutorial steps it's not
	@for $i from 1 through $menu-items-loop-offset {
		// We have to use !important to make the hovers overide if the last:child is the active or hovered
		.Nav-item:nth-child(#{$i}):hover ~ .Nav-item:last-child:after {
			left:($width*$i)-$width !important;
		}

		.Nav-item:nth-child(#{$i}):hover ~ .Nav-item:last-child:before{
			left:($width*$i)+($width/2)-$width !important;
		}
			
	}
		
	// this could be nested in the original .Nav-item
	.Nav-item {
		&:last-child {
			// make sure the last-child talks to itself
			&:hover, &.is-active {
				&:before {
					// we have to use important because the sibling selctor is more specific.
					left: (100%-$width)+($width/2) !important;
				}
				&:after{
					left: 100%-$width !important;
				}
			}        
		}
	}
}

.with-indicator-scrolled {

	.Nav-item {

		&:last-child {

			transition: all .3s ease-in-out;

			&:before {
				border: 6px solid transparent;
				border-top-color: $indicator-color;
				width: 0;
				height: 0;
				top: 5px;
				left: ($width/2);
				margin-left: -3px;
			}
			&:after {
				background: $indicator-color;
				top: 0px;
				height:5px;
				left: 0;
				width: $width;
				z-index: 100;
			}
		}

	}

}

.with-indicator {

	.Nav-item {

		a {
			display: block;
			text-decoration: none;
			padding-top:0;
			padding-bottom:20px;
		}

		padding-top: 20px!important;

		&:last-child {
			&:before {
				border: 6px solid transparent;
				border-top-color: $indicator-color;
				width: 0;
				height: 0;
				top: 3px;
				left: ($width/2);
				margin-left: -3px;
			}
			&:after {
				background: $indicator-color;
				top:0;
				height:3px;
				width: $width;
				z-index: -1;
			}
		}
	}

}


// ======================================================
// The usual Global resets
// ======================================================

*, *:before, *:after {
	box-sizing: border-box; // learn more: https://css-tricks.com/box-sizing/
}

// Extending the https://css-tricks.com/micro-clearfix/
%cf:before,
%cf:after {
		content: " ";
		display: table;
}
%cf:after {
		clear: both;
}

// Presentation Styling

.toggle {
		color: #fff;
		font-family: sans-serif;
		text-align: center;
}
